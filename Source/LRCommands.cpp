/*
  ==============================================================================

    LRCommands.cpp
    Created: 31 Jul 2015 10:21:12pm
    Author:  Parth, Jaffe

This file is part of MIDI2LR. Copyright 2015 by Rory Jaffe, derived from code
by Parth.

MIDI2LR is free software: you can redistribute it and/or modify it under the
terms of the GNU General Public License as published by the Free Software
Foundation, either version 3 of the License, or (at your option) any later version.

MIDI2LR is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with
MIDI2LR.  If not, see <http://www.gnu.org/licenses/>.  
  ==============================================================================
*/
#include <unordered_map>
#include "LRCommands.h"
#include "CommandMap.h"

const std::vector<String> LRCommandList::AdjustmentStringList = {
    "White Balance Auto",
    "White Balance Daylight",
    "White Balance Cloudy",
    "White Balance Shade",
    "White Balance Tungsten",
    "White Balance Fluorescent",
    "White Balance Flash",
    "Temperature",
    "Tint",
    "Exposure",
    "Contrast",
    "Highlights",
    "Shadows",
    "Whites",
    "Blacks",
    "Clarity",
    "Vibrance",
    "Saturation",
    "Reset Temperature",
    "Reset Tint",
    "Reset Exposure",
    "Reset Contrast",
    "Reset Highlights",
    "Reset Shadows",
    "Reset Whites",
    "Reset Blacks",
    "Reset Clarity",
    "Reset Vibrance",
    "Reset Saturation",
};

const std::vector<String> LRCommandList::ToneStringList = {
    "Parametric Darks",
    "Parametric Lights",
    "Parametric Shadows",
    "Parametric Highlights",
    "Parametric Shadow Split",
    "Parametric Midtone Split",
    "Parametric Highlight Split",
    "Reset Parametric Darks",
    "Reset Parametric Lights",
    "Reset Parametric Shadows",
    "Reset Parametric Highlights",
    "Reset Parametric Shadow Split",
    "Reset Parametric Midtone Split",
    "Reset Parametric Highlight Split",
};

const std::vector<String> LRCommandList::MixerStringList = {
    // Colour
    "Enable/Disable Color Adjustments",
    "Saturation Adjustment Red",
    "Saturation Adjustment Orange",
    "Saturation Adjustment Yellow",
    "Saturation Adjustment Green",
    "Saturation Adjustment Aqua",
    "Saturation Adjustment Blue",
    "Saturation Adjustment Purple",
    "Saturation Adjustment Magenta",
    "Hue Adjustment Red",
    "Hue Adjustment Orange",
    "Hue Adjustment Yellow",
    "Hue Adjustment Green",
    "Hue Adjustment Aqua",
    "Hue Adjustment Blue",
    "Hue Adjustment Purple",
    "Hue Adjustment Magenta",
    "Luminance Adjustment Red",
    "Luminance Adjustment Orange",
    "Luminance Adjustment Yellow",
    "Luminance Adjustment Green",
    "Luminance Adjustment Aqua",
    "Luminance Adjustment Blue",
    "Luminance Adjustment Purple",
    "Luminance Adjustment Magenta",
    // B & W
    "Toggle Convert to Grayscale",
    "Enable/Disable Grayscale Mix",
    "Gray Mixer Red",
    "Gray Mixer Orange",
    "Gray Mixer Yellow",
    "Gray Mixer Green",
    "Gray Mixer Aqua",
    "Gray Mixer Blue",
    "Gray Mixer Purple",
    "Gray Mixer Magenta",
};

const std::vector<String> LRCommandList::ResetMixerStringList = {
    // Colour
    "Reset Saturation Adjustment Red",
    "Reset Saturation Adjustment Orange",
    "Reset Saturation Adjustment Yellow",
    "Reset Saturation Adjustment Green",
    "Reset Saturation Adjustment Aqua",
    "Reset Saturation Adjustment Blue",
    "Reset Saturation Adjustment Purple",
    "Reset Saturation Adjustment Magenta",
    "Reset Hue Adjustment Red",
    "Reset Hue Adjustment Orange",
    "Reset Hue Adjustment Yellow",
    "Reset Hue Adjustment Green",
    "Reset Hue Adjustment Aqua",
    "Reset Hue Adjustment Blue",
    "Reset Hue Adjustment Purple",
    "Reset Hue Adjustment Magenta",
    "Reset Luminance Adjustment Red",
    "Reset Luminance Adjustment Orange",
    "Reset Luminance Adjustment Yellow",
    "Reset Luminance Adjustment Green",
    "Reset Luminance Adjustment Aqua",
    "Reset Luminance Adjustment Blue",
    "Reset Luminance Adjustment Purple",
    "Reset Luminance Adjustment Magenta",
    // B & W
    "Reset Gray Mixer Red",
    "Reset Gray Mixer Orange",
    "Reset Gray Mixer Yellow",
    "Reset Gray Mixer Green",
    "Reset Gray Mixer Aqua",
    "Reset Gray Mixer Blue",
    "Reset Gray Mixer Purple",
    "Reset Gray Mixer Magenta",
};

const std::vector<String> LRCommandList::SplitToningStringList = {
    "Enable/Disable Split Toning",
    "Split Toning Shadow Hue",
    "Split Toning Shadow Saturation",
    "Split Toning Highlight Hue",
    "Split Toning Highlight Saturation",
    "Split Toning Balance",
    "Reset Split Toning Shadow Hue",
    "Reset Split Toning Shadow Saturation",
    "Reset Split Toning Highlight Hue",
    "Reset Split Toning Highlight Saturation",
    "Reset Split Toning Balance",

};

const std::vector<String> LRCommandList::DetailStringList = {
    "Enable/Disable Detail",
    "Sharpness",
    "Sharpen Radius",
    "Sharpen Detail",
    "Sharpen Edge Masking",
    "Luminance Smoothing",
    "Luminance Noise Reduction Detail",
    "Luminance Noise Reduction Contrast",
    "Color Noise Reduction",
    "Color Noise Reduction Detail",
    "Color Noise Reduction Smoothness",
    "Reset Sharpness",
    "Reset Sharpen Radius",
    "Reset Sharpen Detail",
    "Reset Sharpen Edge Masking",
    "Reset Luminance Smoothing",
    "Reset Luminance Noise Reduction Detail",
    "Reset Luminance Noise Reduction Contrast",
    "Reset Color Noise Reduction",
    "Reset Color Noise Reduction Detail",
    "Reset Color Noise Reduction Smoothness",
};

const std::vector<String> LRCommandList::LensCorrectionStringList = {
    "Enable/Disable All Lens Corrections",
    "Enable/Disable Profile Corrections",
    "Enable/Disable Remove Chromatic Aberration",
    "Perspective Upright Off",
    "Perspective Upright Auto",
    "Perspective Upright Level",
    "Perspective Upright Vertical",
    "Perspective Upright Full",
    "Reset Perspective Upright",
    "Lens Profile Distortion Scale",
    "Lens Profile Chromatic Aberration Scale",
    "Lens Profile Vignetting Scale",
    "Reset Lens Profile Distortion Scale",
    "Reset Lens Profile Chromatic Aberration Scale",
    "Reset Lens Profile Vignetting Scale",
    "Defringe Purple Amount",
    "Defringe Purple Hue Lo",
    "Defringe Purple Hue Hi",
    "Defringe Green Amount",
    "Defringe Green Hue Lo",
    "Defringe Green Hue Hi",
    "Reset Defringe Purple Amount",
    "Reset Defringe Purple Hue Lo",
    "Reset Defringe Purple Hue Hi",
    "Reset Defringe Green Amount",
    "Reset Defringe Green Hue Lo",
    "Reset Defringe Green Hue Hi",
    "Lens Manual Distortion Amount",
    "Perspective Vertical",
    "Perspective Horizontal",
    "Perspective Rotate",
    "Perspective Scale",
    "Perspective Aspect",
    "Lens Vignetting Amount",
    "Lens Vignetting Midpoint",
    "Reset Lens Manual Distortion Amount",
    "Reset Perspective Vertical",
    "Reset Perspective Horizontal",
    "Reset Perspective Rotate",
    "Reset Perspective Scale",
    "Reset Perspective Aspect",
    "Reset Lens Vignetting Amount",
    "Reset Lens Vignetting Midpoint",
};

const std::vector<String> LRCommandList::EffectsStringList = {
    "Enable/Disable Effects",
    "Dehaze",
    "Post Crop Vignette Amount",
    "Post Crop Vignette Midpoint",
    "Post Crop Vignette Feather",
    "Post Crop Vignette Roundness",
    "Post Crop Vignette Style",
    "Post Crop Vignette Highlight Contrast",
    "Grain Amount",
    "Grain Size",
    "Grain Frequency",
    "Reset Dehaze",
    "Reset Post Crop Vignette Amount",
    "Reset Post Crop Vignette Midpoint",
    "Reset Post Crop Vignette Feather",
    "Reset Post Crop Vignette Roundness",
    "Reset Post Crop Vignette Style",
    "Reset Post Crop Vignette Highlight Contrast",
    "Reset Grain Amount",
    "Reset Grain Size",
    "Reset Grain Frequency",
};

const std::vector<String> LRCommandList::CalibrateStringList = {
    "Enable/Disable Calibration",
    "Camera Profile Adobe Standard",
    "Camera Profile Clear",
    "Camera Profile Deep",
    "Camera Profile Landscape",
    "Camera Profile Light",
    "Camera Profile Neutral",
    "Camera Profile Portrait",
    "Camera Profile Standard",
    "Camera Profile Vivid",
    "Shadow Tint",
    "Red Hue",
    "Red Saturation",
    "Green Hue",
    "Green Saturation",
    "Blue Hue",
    "Blue Saturation",
    "Reset Shadow Tint",
    "Reset Red Hue",
    "Reset Red Saturation",
    "Reset Green Hue",
    "Reset Green Saturation",
    "Reset Blue Hue",
    "Reset Blue Saturation"
};

const std::vector<String> LRCommandList::SelectionList = {
    "Pick",
    "Reject",
    "Next Photo",
    "Previous Photo",
    "Create Virtual Copy",
    "Remove Flag",
    "Increase Rating",
    "Decrease Rating",
    "Set Rating To 0",
    "Set Rating To 1",
    "Set Rating To 2",
    "Set Rating To 3",
    "Set Rating To 4",
    "Set Rating To 5",
    "Toggle Blue Label",
    "Toggle Green Label",
    "Toggle Red Label",
    "Toggle Purple Label",
    "Toggle Yellow Label",
    "Reset All Develop Adjustments",
    "Reset Last Develop Parameter",
    "Increment Last Develop Parameter",
    "Decrement Last Develop Parameter",
    "Undo",
    "Redo",
    "Copy Settings",
    "Paste Settings",
    "Paste Selected Settings",
};

const std::vector<String> LRCommandList::PresetsList = {
    "Preset 1",
    "Preset 2",
    "Preset 3",
    "Preset 4",
    "Preset 5",
    "Preset 6",
    "Preset 7",
    "Preset 8",
    "Preset 9",
    "Preset 10",
    "Preset 11",
    "Preset 12",
    "Preset 13",
    "Preset 14",
    "Preset 15",
    "Preset 16",
    "Preset 17",
    "Preset 18",
    "Preset 19",
    "Preset 20",
};

const std::vector<String> LRCommandList::MiscList = {
    "Zoom In Large Step",
    "Zoom In Small Step",
    "Zoom Out Small Step",
    "Zoom Out Large Step",
    "Toggle Zoom Off/On",
    "Crop Angle",
    "Crop Bottom",
    "Crop Left",
    "Crop Right",
    "Crop Top",
    "Reset Crop",
/*  "Reset Crop Angle",
    "Reset Crop Bottom",
    "Reset Crop Left",
    "Reset Crop Right",
    "Reset Crop Top", // Resets don't work for crop */
    "Enable/Disable Radial Filter",
    "Enable/Disable Graduated Filter",

    "Enable/Disable Brush Adjustments",
    "Enable/Disable Red-Eye",
    "Enable/Disable Spot Removal",
    "Reset Radial Filter", //ResetCircGrad
    "Reset Graduated Filter", //ResetGradient
    "Reset Brush Adjustments", //ResetBrushing
    "Reset Red-Eye", //ResetRedeye
    "Reset Spot Removal", //ResetSpotRem
};

const std::vector<String> LRCommandList::TMPList = {
    "Loupe Tool",
    "Crop Tool",
    "Spot Removal Tool",
    "Red Eye Tool",
    "Graduated Filter Tool",
    "Radial Filter Tool",
    "Adjustment Brush Tool",
    "Library Module",
    "Develop Module",
    "Map Module",
    "Book Module",
    "Slideshow Module",
    "Print Module",
    "Web Module",
    "Basic Adjustments Panel",
    "Tone Curve Panel",
    "Mixer Panel",
    "Split Toning Panel",
    "Detail Panel",
    "Lens Corrections Panel",
    "Effects Panel",
    "Camera Calibration Panel",
};

const std::vector<String> LRCommandList::ViewModesList = {
    "Loupe",
    "Grid",
    "Compare",
    "Survey",
    "People",
    "Develop Loupe",
    "Develop Bef/Aft Horizontal",
    "Develop Bef/Aft Vertical",
    "Develop Before",
    "Second Screeen Loupe",
    "Second Screen Live Loupe",
    "Second Screen Locked Loupe",
    "Second Screen Grid",
    "Second Screen Compare",
    "Second Screen Survey",
    "Second Screen Slideshow",
    "Toggle on/off Second Screen",
};

const std::vector<String> LRCommandList::ProfilesList = {
    "Profile 1",
    "Profile 2",
    "Profile 3",
    "Profile 4",
    "Profile 5",
    "Profile 6",
    "Profile 7",
    "Profile 8",
    "Profile 9",
    "Profile 10",
};


const std::vector<String> LRCommandList::LRStringList = {
    "Unmapped",
    /* Adjust */
    "WhiteBalanceAuto",
    "WhiteBalanceDaylight",
    "WhiteBalanceCloudy",
    "WhiteBalanceShade",
    "WhiteBalanceTungsten",
    "WhiteBalanceFluorescent",
    "WhiteBalanceFlash",
    "Temperature",
    "Tint",
    "Exposure",
    "Contrast",
    "Highlights",
    "Shadows",
    "Whites",
    "Blacks",
    "Clarity",
    "Vibrance",
    "Saturation",
    "ResetTemperature",
    "ResetTint",
    "ResetExposure",
    "ResetContrast",
    "ResetHighlights",
    "ResetShadows",
    "ResetWhites",
    "ResetBlacks",
    "ResetClarity",
    "ResetVibrance",
    "ResetSaturation",

    /* Tone*/
    "ParametricDarks",
    "ParametricLights",
    "ParametricShadows",
    "ParametricHighlights",
    "ParametricShadowSplit",
    "ParametricMidtoneSplit",
    "ParametricHighlightSplit",
    "ResetParametricDarks",
    "ResetParametricLights",
    "ResetParametricShadows",
    "ResetParametricHighlights",
    "ResetParametricShadowSplit",
    "ResetParametricMidtoneSplit",
    "ResetParametricHighlightSplit",

    /* Mixer */
    "EnableColorAdjustments",
    "SaturationAdjustmentRed",
    "SaturationAdjustmentOrange",
    "SaturationAdjustmentYellow",
    "SaturationAdjustmentGreen",
    "SaturationAdjustmentAqua",
    "SaturationAdjustmentBlue",
    "SaturationAdjustmentPurple",
    "SaturationAdjustmentMagenta",
    "HueAdjustmentRed",
    "HueAdjustmentOrange",
    "HueAdjustmentYellow",
    "HueAdjustmentGreen",
    "HueAdjustmentAqua",
    "HueAdjustmentBlue",
    "HueAdjustmentPurple",
    "HueAdjustmentMagenta",
    "LuminanceAdjustmentRed",
    "LuminanceAdjustmentOrange",
    "LuminanceAdjustmentYellow",
    "LuminanceAdjustmentGreen",
    "LuminanceAdjustmentAqua",
    "LuminanceAdjustmentBlue",
    "LuminanceAdjustmentPurple",
    "LuminanceAdjustmentMagenta",
    "ConvertToGrayscale",
    "EnableGrayscaleMix",
    "GrayMixerRed",
    "GrayMixerOrange",
    "GrayMixerYellow",
    "GrayMixerGreen",
    "GrayMixerAqua",
    "GrayMixerBlue",
    "GrayMixerPurple",
    "GrayMixerMagenta",

    /* Reset Mixer */
   "ResetSaturationAdjustmentRed",
   "ResetSaturationAdjustmentOrange",
   "ResetSaturationAdjustmentYellow",
   "ResetSaturationAdjustmentGreen",
   "ResetSaturationAdjustmentAqua",
   "ResetSaturationAdjustmentBlue",
   "ResetSaturationAdjustmentPurple",
   "ResetSaturationAdjustmentMagenta",
   "ResetHueAdjustmentRed",
   "ResetHueAdjustmentOrange",
   "ResetHueAdjustmentYellow",
   "ResetHueAdjustmentGreen",
   "ResetHueAdjustmentAqua",
   "ResetHueAdjustmentBlue",
   "ResetHueAdjustmentPurple",
   "ResetHueAdjustmentMagenta",
   "ResetLuminanceAdjustmentRed",
   "ResetLuminanceAdjustmentOrange",
   "ResetLuminanceAdjustmentYellow",
   "ResetLuminanceAdjustmentGreen",
   "ResetLuminanceAdjustmentAqua",
   "ResetLuminanceAdjustmentBlue",
   "ResetLuminanceAdjustmentPurple",
   "ResetLuminanceAdjustmentMagenta",
   "ResetGrayMixerRed",
   "ResetGrayMixerOrange",
   "ResetGrayMixerYellow",
   "ResetGrayMixerGreen",
   "ResetGrayMixerAqua",
   "ResetGrayMixerBlue",
   "ResetGrayMixerPurple",
   "ResetGrayMixerMagenta",

    /* Split Toning */
    "EnableSplitToning",
    "SplitToningShadowHue",
    "SplitToningShadowSaturation",
    "SplitToningHighlightHue",
    "SplitToningHighlightSaturation",
    "SplitToningBalance",
    "ResetSplitToningShadowHue",
    "ResetSplitToningShadowSaturation",
    "ResetSplitToningHighlightHue",
    "ResetSplitToningHighlightSaturation",
    "ResetSplitToningBalance",

    /* Detail */
    "EnableDetail",
    "Sharpness",
    "SharpenRadius",
    "SharpenDetail",
    "SharpenEdgeMasking",
    "LuminanceSmoothing",
    "LuminanceNoiseReductionDetail",
    "LuminanceNoiseReductionContrast",
    "ColorNoiseReduction",
    "ColorNoiseReductionDetail",
    "ColorNoiseReductionSmoothness",
    "ResetSharpness",
    "ResetSharpenRadius",
    "ResetSharpenDetail",
    "ResetSharpenEdgeMasking",
    "ResetLuminanceSmoothing",
    "ResetLuminanceNoiseReductionDetail",
    "ResetLuminanceNoiseReductionContrast",
    "ResetColorNoiseReduction",
    "ResetColorNoiseReductionDetail",
    "ResetColorNoiseReductionSmoothness",
        
    /* Lens Correction */
    "EnableLensCorrections",
    "LensProfileEnable",
    "AutoLateralCA",
    "UprightOff",
    "UprightAuto",
    "UprightLevel",
    "UprightVertical",
    "UprightFull",
    "ResetPerspectiveUpright",
    "LensProfileDistortionScale",
    "LensProfileChromaticAberrationScale",
    "LensProfileVignettingScale",
    "ResetLensProfileDistortionScale",
    "ResetLensProfileChromaticAberrationScale",
    "ResetLensProfileVignettingScale",
    "DefringePurpleAmount",
    "DefringePurpleHueLo",
    "DefringePurpleHueHi",
    "DefringeGreenAmount",
    "DefringeGreenHueLo",
    "DefringeGreenHueHi",
    "ResetDefringePurpleAmount",
    "ResetDefringePurpleHueLo",
    "ResetDefringePurpleHueHi",
    "ResetDefringeGreenAmount",
    "ResetDefringeGreenHueLo",
    "ResetDefringeGreenHueHi",
    "LensManualDistortionAmount",
    "PerspectiveVertical",
    "PerspectiveHorizontal",
    "PerspectiveRotate",
    "PerspectiveScale",
    "PerspectiveAspect",
    "VignetteAmount",
    "VignetteMidpoint",
    "ResetLensManualDistortionAmount",
    "ResetPerspectiveVertical",
    "ResetPerspectiveHorizontal",
    "ResetPerspectiveRotate",
    "ResetPerspectiveScale",
    "ResetPerspectiveAspect",
    "ResetVignetteAmount",
    "ResetVignetteMidpoint",

    /* Effects */
    "EnableEffects",
    "Dehaze",
    "PostCropVignetteAmount",
    "PostCropVignetteMidpoint",
    "PostCropVignetteFeather",
    "PostCropVignetteRoundness",
    "PostCropVignetteStyle",
    "PostCropVignetteHighlightContrast",
    "GrainAmount",
    "GrainSize",
    "GrainFrequency",
    "ResetDehaze",
    "ResetPostCropVignetteAmount",
    "ResetPostCropVignetteMidpoint",
    "ResetPostCropVignetteFeather",
    "ResetPostCropVignetteRoundness",
    "ResetPostCropVignetteStyle",
    "ResetPostCropVignetteHighlightContrast",
    "ResetGrainAmount",
    "ResetGrainSize",
    "ResetGrainFrequency",

    /* Calibrate */
    "EnableCalibration",
    "Profile_Adobe_Standard",
    "Profile_Camera_Clear",
    "Profile_Camera_Deep",
    "Profile_Camera_Landscape",
    "Profile_Camera_Light",
    "Profile_Camera_Neutral",
    "Profile_Camera_Portrait",
    "Profile_Camera_Standard",
    "Profile_Camera_Vivid",
    "ShadowTint",
    "RedHue",
    "RedSaturation",
    "GreenHue",
    "GreenSaturation",
    "BlueHue",
    "BlueSaturation",
    "ResetShadowTint",
    "ResetRedHue",
    "ResetRedSaturation",
    "ResetGreenHue",
    "ResetGreenSaturation",
    "ResetBlueHue",
    "ResetBlueSaturation",

    /* Selection Actions */
    "Pick",
    "Reject",
    "Next",
    "Prev",
    "VirtualCopy",
    "RemoveFlag",
    "IncreaseRating",
    "DecreaseRating",
    "SetRating0",
    "SetRating1",
    "SetRating2",
    "SetRating3",
    "SetRating4",
    "SetRating5",
    "ToggleBlue",
    "ToggleGreen",
    "ToggleRed",
    "TogglePurple",
    "ToggleYellow",
    "ResetAll",
    "ResetLast",
    "IncrementLastDevelopParameter",
    "DecrementLastDevelopParameter",
    "Undo",
    "Redo",
    "CopySettings",
    "PasteSettings",
    "PasteSelectedSettings",

    /* Presets */
    "Preset_1",
    "Preset_2",
    "Preset_3",
    "Preset_4",
    "Preset_5",
    "Preset_6",
    "Preset_7",
    "Preset_8",
    "Preset_9",
    "Preset_10",
    "Preset_11",
    "Preset_12",
    "Preset_13",
    "Preset_14",
    "Preset_15",
    "Preset_16",
    "Preset_17",
    "Preset_18",
    "Preset_19",
    "Preset_20",

    /* Misc */
    "ZoomInLargeStep",
    "ZoomInSmallStep",
    "ZoomOutSmallStep",
    "ZoomOutLargeStep",
    "ToggleZoomOffOn",
    "CropAngle",
    "CropBottom",
    "CropLeft",
    "CropRight",
    "CropTop",
    "ResetCrop",
/*  "ResetCropAngle",
    "ResetCropBottom",
    "ResetCropLeft",
    "ResetCropRight",
    "ResetCropTop",   // resets don't work for crop*/
    "EnableCircularGradientBasedCorrections",
    "EnableGradientBasedCorrections",
    "EnablePaintBasedCorrections",
    "EnableRedEye",
    "EnableRetouch",
    "ResetCircGrad",
    "ResetGradient",
    "ResetBrushing",
    "ResetRedeye",
    "ResetSpotRem",

    /* TMP (Tools Modules Panels) */
    "Loupe",
    "CropOverlay",
    "SpotRemoval",
    "RedEye",
    "GraduatedFilter",
    "RadialFilter",
    "AdjustmentBrush",
    "SwToMlibrary",
    "SwToMdevelop",
    "SwToMmap",
    "SwToMbook",
    "SwToMslideshow",
    "SwToMprint",
    "SwToMweb",
    "RevealPanelAdjust",
    "RevealPanelTone",
    "RevealPanelMixer",
    "RevealPanelSplit",
    "RevealPanelDetail",
    "RevealPanelLens",
    "RevealPanelEffects",
    "RevealPanelCalibrate", 

    /* View Modes */
    "ShoVwloupe",
    "ShoVwgrid",
    "ShoVwcompare",
    "ShoVwsurvey",
    "ShoVwpeople",
    "ShoVwdevelop_loupe",
    "ShoVwdevelop_before_after_horiz",
    "ShoVwdevelop_before_after_vert",
    "ShoVwdevelop_before",
    "ShoScndVwloupe",
    "ShoScndVwlive_loupe",
    "ShoScndVwlocked_loupe",
    "ShoScndVwgrid",
    "ShoScndVwcompare",
    "ShoScndVwsurvey",
    "ShoScndVwslideshow",
    "ToggleScreenTwo",

    /* Profiles */
    "profile1",
    "profile2",
    "profile3",
    "profile4",
    "profile5",
    "profile6",
    "profile7",
    "profile8",
    "profile9",
    "profile10",

};

const std::vector<String> LRCommandList::NextPrevProfile = {
  "Previous Profile",
  "Next Profile",
};

int LRCommandList::getIndexOfCommand(const String& command)
{
    static std::unordered_map<String, int> indexMap;

	// better to check for empty then lenght, as empty has a constant run time behavior.
    if (indexMap.empty())
    {
        int idx = 0;
        for (auto &str : LRStringList)
            indexMap[str] = idx++;

        for (auto &str : NextPrevProfile)
            indexMap[str] = idx++;
    }

    return indexMap[command];

}